@echo off
REM Script: ManageFiles.cmd
REM Description: This script checks files in a specified directory that are older than a given number of days. Depending on the parameter, 
REM it either archives or deletes these files. It also checks archive files older than another specified number of days and deletes them. 
REM All actions are logged, and only the last 10 MB of logs are retained.
REM Parameters:
REM   %1 - DirectoryPath: The directory path where files will be checked.
REM   %2 - RetentionDays: The number of days after which files in the directory will be considered for archiving or deletion.
REM   %3 - ArchiveFiles: Boolean value (true/false) indicating whether files should be archived.
REM   %4 - ArchiveDirectory: The directory where archived files will be moved.
REM   %5 - ArchiveRetentionDays: The number of days after which archive files will be considered for deletion.
REM Example Usage:
REM   ManageFiles.cmd "C:\YourDirectory" 30 true "C:\ArchiveDirectory" 180

setlocal

REM Set parameters
set "DirectoryPath=%1"
set "RetentionDays=%2"
set "ArchiveFiles=%3"
set "ArchiveDirectory=%4"
set "ArchiveRetentionDays=%5"

REM Set log file path
set "LogFilePath=C:\Logs\file_management.log"

REM Function to write log
:WriteLog
echo %DATE% %TIME% - %1 >> "%LogFilePath%"
goto :EOF

REM Check if log file exists, if not, create it
if not exist "%LogFilePath%" (
    type nul > "%LogFilePath%"
)

REM Function to delete old log entries if log file exceeds 10 MB
:CleanUpLog
for %%F in ("%LogFilePath%") do set "LogSize=%%~zF"
set /a "LogSizeMB=LogSize / 1048576"
if %LogSizeMB% gtr 10 (
    for /f "skip=1000 delims=" %%A in ("%LogFilePath%") do (
        echo %%A >> "%LogFilePath%.tmp"
    )
    move /y "%LogFilePath%.tmp" "%LogFilePath%" > nul
)
goto :EOF

REM Clean up old log entries if needed
call :CleanUpLog

REM Check if the directory exists
if not exist "%DirectoryPath%" (
    call :WriteLog "Directory %DirectoryPath% not found."
    exit /b
)

REM Get current date
for /f "tokens=2 delims==" %%a in ('wmic OS Get localdatetime /value') do set "DT=%%a"
set "Year=%DT:~0,4%"
set "Month=%DT:~4,2%"
set "Day=%DT:~6,2%"
set "Hour=%DT:~8,2%"
set "Minute=%DT:~10,2%"
set "Second=%DT:~12,2%"
set "DateTime=%Year%-%Month%-%Day% %Hour%:%Minute%:%Second%"

REM Get files older than specified retention days
forfiles /p "%DirectoryPath%" /m *.* /d -%RetentionDays% /c "cmd /c if @isdir==FALSE echo @file" > "%temp%\oldfiles.tmp"

REM Perform actions based on parameter values
for /f "tokens=*" %%F in (%temp%\oldfiles.tmp) do (
    if %ArchiveFiles% == true (
        REM Compress file and move to archive directory
        set "ArchiveFileName=%ArchiveDirectory%\%DateTime%_%%~nxF.zip"
        "%ProgramFiles%\7-Zip\7z.exe" a -tzip "%ArchiveFileName%" "%%F" > nul
        call :WriteLog "File %%F archived to %ArchiveFileName%"
    ) else (
        REM Delete file
        del /q "%%F"
        call :WriteLog "File %%F deleted"
    )
)

REM Delete old archive files
if %ArchiveFiles% == true (
    forfiles /p "%ArchiveDirectory%" /m *.zip /d -%ArchiveRetentionDays% /c "cmd /c if @isdir==FALSE del /q @file & call :WriteLog Old archive @file deleted"
)

endlocal
